{"version":3,"file":"static/js/563.16169592.chunk.js","mappings":"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","sources":["pages/Projects/OnlineVideoDownloader/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport axios from \"axios\";\r\nimport \"./index.scss\";\r\n\r\nimport { ImDownload3 } from \"react-icons/im\";\r\nimport { GoVideo } from \"react-icons/go\";\r\nimport { MdMusicVideo } from \"react-icons/md\";\r\nimport { FaVolumeMute } from \"react-icons/fa\";\r\n\r\nimport iconYoutube from \"assets/icons/icons8-youtube-48.png\";\r\nimport iconTiktok from \"assets/icons/icons8-tiktok-48.png\";\r\n\r\n// const ENDPOINT = \"http://localhost:5000\";\r\nconst ENDPOINT = \"https://letuan317.synology.me:7001\";\r\n\r\n// TODO: Loading animation when Fetch info\r\n// TODO: Loading animation when click Download,\r\n\r\nexport default function OnlineVideoDownloader() {\r\n  const [url, setUrl] = useState(\"\");\r\n  const [extractor, setExtractor] = useState(null);\r\n  const [videoInfo, setVideoInfo] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [iconPlatform, setIconPlatform] = useState(null);\r\n\r\n  const fetchVideoInfo = async () => {\r\n    console.debug(`Fetching video info from ${url}`);\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`${ENDPOINT}/download/videos`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ url: url }),\r\n      });\r\n      const data = await response.json();\r\n      setVideoInfo(data.data);\r\n      setExtractor(data.data.extractor);\r\n      switch (data.data.extractor) {\r\n        case \"youtube\":\r\n          setIconPlatform(iconYoutube);\r\n          break;\r\n        case \"tiktok\":\r\n          setIconPlatform(iconTiktok);\r\n          break;\r\n        default:\r\n          setIconPlatform(iconYoutube);\r\n          break;\r\n      }\r\n      console.debug(data.data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Error fetching video info:\", error);\r\n      setLoading(false);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const downloadVideo = async (itag, type) => {\r\n    setLoading(true);\r\n    setProgress(0);\r\n    try {\r\n      console.debug(extractor, url, itag, type);\r\n      var fileName = videoInfo.id + \".mp4\";\r\n      var contentType = \"video/mp4\";\r\n      if (type === \"audio\") {\r\n        fileName = videoInfo.id + \".mp3\";\r\n        contentType = \"audio/mp3\";\r\n      }\r\n      // 1. URL Encoding\r\n      const encodedExtractor = encodeURIComponent(extractor);\r\n      const encodedUrl = encodeURIComponent(url);\r\n      const encodedItag = encodeURIComponent(itag);\r\n      const encodedType = encodeURIComponent(type);\r\n\r\n      // 2. Fetch Request\r\n      const response = await fetch(`${ENDPOINT}/download/videos?extractor=${encodedExtractor}&id=${videoInfo.id}&url=${encodedUrl}&itag=${encodedItag}&type=${encodedType}`, {\r\n        method: \"GET\",\r\n      });\r\n\r\n      // 3. Check Response\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n\r\n      // 4. Read Chunks and Update Progress\r\n      const totalLength = +response.headers.get(\"Content-Length\");\r\n      let receivedLength = 0;\r\n\r\n      const reader = response.body.getReader();\r\n      const chunks = [];\r\n\r\n      while (true) {\r\n        const { done, value } = await reader.read();\r\n        if (done) {\r\n          break;\r\n        }\r\n\r\n        chunks.push(value);\r\n        receivedLength += value.length;\r\n\r\n        // Update progress in percentage\r\n        setProgress((receivedLength / totalLength) * 100);\r\n      }\r\n\r\n      // 5. Create Blob from Chunks and Trigger Download\r\n      const blob = new Blob(chunks, { type: contentType });\r\n\r\n      // Create a temporary URL for the blob\r\n      const blobUrl = URL.createObjectURL(blob);\r\n\r\n      // Create a temporary anchor (<a>) element to facilitate the download\r\n      const tempLink = document.createElement(\"a\");\r\n      tempLink.href = blobUrl;\r\n\r\n      // Suggest a name for the downloaded file\r\n      tempLink.setAttribute(\"download\", fileName);\r\n\r\n      // Programmatically click the anchor link to trigger the download\r\n      tempLink.click();\r\n\r\n      // Clean up by revoking the temporary URL\r\n      URL.revokeObjectURL(blobUrl);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Error downloading video:\", error);\r\n      setLoading(false);\r\n    } finally {\r\n      setProgress(100);\r\n      setLoading(false);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Tuan Le - Online Video Downloader</title>\r\n        <meta name=\"description\" content=\"Online video download\" />\r\n      </Helmet>\r\n      <div className=\"online-video-downloader\">\r\n        {loading ? (\r\n          <div className=\"container-loading\">\r\n            <div className=\"cover\"></div>\r\n            <div className=\"shapes-4\"></div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <div className=\"container\">\r\n          <section>\r\n            <h1>Online Video Downloader</h1>\r\n            <div className=\"container-input\">\r\n              <input type=\"text\" placeholder=\"Paste your video link here\" value={url} onChange={(e) => setUrl(e.target.value)} />\r\n              <button className=\"button-62\" onClick={fetchVideoInfo}>\r\n                Fetch Info\r\n              </button>\r\n            </div>\r\n          </section>\r\n\r\n          <section>\r\n            {videoInfo ? (\r\n              <>\r\n                {extractor === \"youtube\" ? (\r\n                  <>\r\n                    <h4>Download video as:</h4>\r\n                    <div className=\"container-icon-platform\">\r\n                      <img src={iconPlatform} alt=\"icon\" className=\"icon-platform\" />\r\n                    </div>\r\n                    {/* <progress value={progress} max=\"100\"></progress> */}\r\n                    <ul>\r\n                      {videoInfo.formats.map((video, index) => (\r\n                        <li key={index}>\r\n                          <p>\r\n                            {video.type === \"video\" ? <GoVideo className=\"icon-adjust-right\" /> : <MdMusicVideo className=\"icon-adjust-right\" />}\r\n                            <span>{video.resolution}</span>\r\n                            {video.type === \"video\" ? \".mp4\" : \".mp3\"}\r\n\r\n                            {video.progressive ? \"\" : <FaVolumeMute className=\"icon-adjust-left\" />}\r\n                          </p>\r\n                          {loading ? (\r\n                            <button disabled className=\"button-24\" onClick={() => downloadVideo(video.itag, video.type)}>\r\n                              <ImDownload3 className=\"icon-adjust-right\" />\r\n                              Download\r\n                            </button>\r\n                          ) : (\r\n                            <button className=\"button-24\" onClick={() => downloadVideo(video.itag, video.type)}>\r\n                              <ImDownload3 className=\"icon-adjust-right\" />\r\n                              Download\r\n                            </button>\r\n                          )}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <button onClick={() => downloadVideo(\"0\")}>Download</button>\r\n                  </>\r\n                )}\r\n                <div className=\"container-video-info\">\r\n                  <img src={videoInfo.thumbnail} alt=\"Thumbnail\" />\r\n                </div>\r\n                <h5>{videoInfo.title}</h5>\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":["ENDPOINT","OnlineVideoDownloader","_useState","useState","_useState2","_slicedToArray","url","setUrl","_useState3","_useState4","extractor","setExtractor","_useState5","_useState6","videoInfo","setVideoInfo","_useState7","_useState8","loading","setLoading","_useState9","_useState10","setProgress","_useState11","_useState12","iconPlatform","setIconPlatform","fetchVideoInfo","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","console","debug","concat","fetch","method","headers","body","JSON","stringify","sent","json","t0","iconYoutube","abrupt","iconTiktok","t1","error","finish","stop","apply","arguments","downloadVideo","_ref2","_callee2","itag","type","fileName","contentType","encodedExtractor","encodedUrl","encodedItag","encodedType","totalLength","receivedLength","reader","chunks","_yield$reader$read","done","value","blob","blobUrl","tempLink","_context2","id","encodeURIComponent","ok","Error","status","get","getReader","read","push","length","Blob","URL","createObjectURL","document","createElement","href","setAttribute","click","revokeObjectURL","_x","_x2","_jsxs","_Fragment","children","Helmet","_jsx","name","content","className","placeholder","onChange","e","target","onClick","src","alt","formats","map","video","index","GoVideo","MdMusicVideo","resolution","progressive","FaVolumeMute","disabled","ImDownload3","thumbnail","title"],"sourceRoot":""}